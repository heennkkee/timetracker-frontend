/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/users": {
    get: operations["users.list_all"];
    post: operations["users.add"];
  };
  "/users/{id}": {
    get: operations["users.get"];
    put: operations["users.update"];
    /** Remove a user with specified ID */
    delete: operations["users.remove"];
  };
}

export interface components {
  schemas: {
    User: {
      id: number;
      name: string;
      email: string;
    };
    Error: {
      message: string;
    };
  };
}

export interface operations {
  "users.list_all": {
    responses: {
      /** List all users */
      200: {
        content: {
          "application/json": {
            success?: boolean;
            data?: components["schemas"]["User"][];
            error?: components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "users.add": {
    responses: {
      /** The new user was successfully created */
      201: {
        content: {
          "application/json": {
            success?: boolean;
            data?: components["schemas"]["User"];
            error?: components["schemas"]["Error"];
          };
        };
      };
      /** Failed to add new user due to input error */
      400: {
        content: {
          "application/json": {
            success?: boolean;
            error?: components["schemas"]["Error"];
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
  };
  "users.get": {
    parameters: {
      path: {
        /** ID of user to get */
        id: string;
      };
    };
    responses: {
      /** User that was found */
      200: {
        content: {
          "application/json": {
            success?: boolean;
            data?: components["schemas"]["User"];
            error?: components["schemas"]["Error"];
          };
        };
      };
      /** User was not found */
      404: {
        content: {
          "application/json": {
            success?: boolean;
            error?: components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "users.update": {
    parameters: {
      path: {
        /** ID of user to update */
        id: string;
      };
    };
    responses: {
      /** The user that was updated */
      200: {
        content: {
          "application/json": {
            success?: boolean;
            data?: components["schemas"]["User"];
            error?: components["schemas"]["Error"];
          };
        };
      };
      /** Failed to find user */
      404: {
        content: {
          "application/json": {
            success?: boolean;
            error?: components["schemas"]["Error"];
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
  };
  /** Remove a user with specified ID */
  "users.remove": {
    parameters: {
      path: {
        /** ID of user */
        id: string;
      };
    };
    responses: {
      /** User was removed */
      200: {
        content: {
          "application/json": {
            success?: boolean;
          };
        };
      };
      /** Failed to find user */
      404: {
        content: {
          "application/json": {
            success?: boolean;
            error?: components["schemas"]["Error"];
          };
        };
      };
    };
  };
}
