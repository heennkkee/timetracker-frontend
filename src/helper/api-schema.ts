/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/users": {
    get: operations["users.list_all"];
    post: operations["users.add"];
  };
  "/users/{userid}": {
    get: operations["users.get"];
    put: operations["users.update"];
    /** Remove a user with specified ID */
    delete: operations["users.remove"];
  };
  "/users/{userid}/clockings": {
    get: operations["clockings.list_users_all_clockings"];
    post: operations["clockings.add"];
  };
  "/auth/{userid}/login": {
    post: operations["auth.login"];
  };
  "/auth/{userid}/logout": {
    post: operations["auth.logout"];
  };
}

export interface components {
  schemas: {
    User: {
      id: number;
      name: string;
      email: string;
    };
    UserInput: {
      name: string;
      email: string;
    };
    Error: {
      message: string;
    };
    DefaultError: {
      detail: string;
      status: 400 | 401 | 403 | 404;
      title: string;
      type?: string;
    };
    Clocking: {
      id: number;
      direction: "in" | "out";
      user_id: number;
      datetime: string;
    };
    ClockingInput: {
      direction: "in" | "out";
      datetime?: string;
    };
  };
  responses: {
    /** Resource not found */
    NotFound: {
      content: {
        "application/json": components["schemas"]["DefaultError"];
      };
    };
    /** Request failed due to input error */
    InputError: {
      content: {
        "application/json": components["schemas"]["DefaultError"];
      };
    };
  };
  parameters: {
    /** Userid */
    UserId: number;
  };
}

export interface operations {
  "users.list_all": {
    responses: {
      /** List all users */
      200: {
        content: {
          "application/json": {
            status: 200;
            data: components["schemas"]["User"][];
          };
        };
      };
    };
  };
  "users.add": {
    responses: {
      /** The new user was successfully created */
      201: {
        content: {
          "application/json": {
            status: 201;
            data: components["schemas"]["User"];
          };
        };
      };
      400: components["responses"]["InputError"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserInput"];
      };
    };
  };
  "users.get": {
    parameters: {
      path: {
        /** Userid */
        userid: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** User that was found */
      200: {
        content: {
          "application/json": {
            status: 200;
            data: components["schemas"]["User"];
          };
        };
      };
      404: components["responses"]["NotFound"];
    };
  };
  "users.update": {
    parameters: {
      path: {
        /** Userid */
        userid: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** The user that was updated */
      200: {
        content: {
          "application/json": {
            status: 200;
            data: components["schemas"]["User"];
          };
        };
      };
      404: components["responses"]["NotFound"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserInput"];
      };
    };
  };
  /** Remove a user with specified ID */
  "users.remove": {
    parameters: {
      path: {
        /** Userid */
        userid: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** User was removed */
      200: {
        content: {
          "application/json": {
            status: 200;
          };
        };
      };
      404: components["responses"]["NotFound"];
    };
  };
  "clockings.list_users_all_clockings": {
    parameters: {
      path: {
        /** Userid */
        userid: components["parameters"]["UserId"];
      };
      query: {
        /** Optional parameter to limit number of returns */
        limit?: number;
      };
    };
    responses: {
      /** Clockings */
      200: {
        content: {
          "application/json": {
            status: 200;
            data: components["schemas"]["Clocking"][];
          };
        };
      };
      404: components["responses"]["NotFound"];
    };
  };
  "clockings.add": {
    parameters: {
      path: {
        /** Userid */
        userid: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** Clocking was created */
      201: {
        content: {
          "application/json": {
            status: 201;
            data: components["schemas"]["Clocking"];
          };
        };
      };
      400: components["responses"]["InputError"];
      404: components["responses"]["NotFound"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClockingInput"];
      };
    };
  };
  "auth.login": {
    parameters: {
      path: {
        /** Userid */
        userid: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** Response with token */
      200: {
        headers: {
          "Set-Cookie"?: string;
        };
        content: {
          "application/json": {
            status: 200;
            data: {
              session?: string;
            };
          };
        };
      };
      /** Failed to authorize */
      401: {
        content: {
          "application/json": components["schemas"]["DefaultError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          password?: string;
        };
      };
    };
  };
  "auth.logout": {
    parameters: {
      path: {
        /** Userid */
        userid: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** User is logged out */
      200: {
        headers: {
          "Set-Cookie"?: string;
        };
        content: {
          "application/json": {
            status: 200;
            data: { [key: string]: any };
          };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": {
          session?: string;
        };
      };
    };
  };
}
